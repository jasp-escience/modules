name: Post-Merge Branch and Revert Main

on:
  pull_request_target:
    types:
      - closed # Trigger when a pull request is closed (merged or not)

jobs:
  post_merge_revert:
    if: ${{ github.event.pull_request.merged == true }} # Only run if the PR was merged
    runs-on: ubuntu-24.04

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetch all branches and commit history

      - name: Install yq
        run: |
          sudo apt-get update
          sudo apt-get install -y yq

      - name: Extract Package Name from meta.yaml
        run: |
          PACKAGE_NAME=$(yq -r '.package.name' meta.yaml || echo "")
          if [ -z "$PACKAGE_NAME" ]; then
            echo "Error: Package name not found in meta.yaml" >&2
            exit 1
          fi
          echo "Package name: $PACKAGE_NAME"
          echo "PACKAGE_NAME=$PACKAGE_NAME" >> $GITHUB_ENV
        shell: bash

      - name: Create Branch with Merge Sources
        run: |
          MERGED_BRANCH="module/${{ env.PACKAGE_NAME }}"
          git checkout -b $MERGED_BRANCH
          echo "Branch created: $MERGED_BRANCH"
          git push --set-upstream origin $MERGED_BRANCH

  revert_main:
    if: ${{ github.event.pull_request.merged == true }} # Ensure this runs only if the PR was merged
    runs-on: ubuntu-24.04
    needs: post_merge_revert

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Revert Main Branch to Pre-Merge State
        run: |
          MERGE_COMMIT=$(git rev-parse HEAD)
          git revert -m 1 $MERGE_COMMIT
          git push origin main

      - name: Comment on Pull Request
        uses: actions/github-script@v6
        with:
          script: |
            const comment = `The pull request was merged. A new branch \`module/${process.env.PACKAGE_NAME}\` has been created with the merge changes. The main branch has been reverted to before the merge.`;
            github.rest.issues.createComment({
              issue_number: context.payload.pull_request.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
